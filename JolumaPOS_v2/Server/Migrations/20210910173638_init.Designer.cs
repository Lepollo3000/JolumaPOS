// <auto-generated />
using System;
using JolumaPOS_v2.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JolumaPOS_v2.Server.Migrations
{
    [DbContext(typeof(JolumaPOSDevContext))]
    [Migration("20210910173638_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Caja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.HasKey("Id");

                    b.ToTable("Caja");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Categorium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("Padre")
                        .HasColumnType("int")
                        .HasColumnName("padre");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Padre");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Contacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int")
                        .HasColumnName("proveedor");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono");

                    b.Property<int>("TipoContacto")
                        .HasColumnType("int")
                        .HasColumnName("tipoContacto");

                    b.HasKey("Id");

                    b.HasIndex("Proveedor");

                    b.HasIndex("TipoContacto");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.ContactoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("ContactoTipo");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Inventario", b =>
                {
                    b.Property<int>("Caja")
                        .HasColumnType("int")
                        .HasColumnName("caja");

                    b.Property<int>("Producto")
                        .HasColumnType("int")
                        .HasColumnName("producto");

                    b.Property<int?>("CantidadStock")
                        .HasColumnType("int")
                        .HasColumnName("cantidadStock");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("money")
                        .HasColumnName("precioCompra");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("money")
                        .HasColumnName("precioVenta");

                    b.Property<int?>("PuntoReorden")
                        .HasColumnType("int")
                        .HasColumnName("puntoReorden");

                    b.Property<int>("TipoMonedaCompra")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaCompra");

                    b.Property<int>("TipoMonedaVenta")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaVenta");

                    b.HasKey("Caja", "Producto")
                        .HasName("PK_Inventario_1");

                    b.HasIndex("Producto");

                    b.HasIndex("TipoMonedaCompra");

                    b.HasIndex("TipoMonedaVenta");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioEntradaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadProducto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cantidadProducto");

                    b.Property<int>("EntradaInventario")
                        .HasColumnType("int")
                        .HasColumnName("entradaInventario");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("money")
                        .HasColumnName("precioCompra");

                    b.Property<int>("Producto")
                        .HasColumnType("int")
                        .HasColumnName("producto");

                    b.Property<int>("Razon")
                        .HasColumnType("int")
                        .HasColumnName("razon");

                    b.HasKey("Id");

                    b.HasIndex("EntradaInventario");

                    b.HasIndex("Producto");

                    b.ToTable("InventarioEntradaDetalle");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioEntradum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Caja")
                        .HasColumnType("int")
                        .HasColumnName("caja");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("empleado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int")
                        .HasColumnName("proveedor");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Caja");

                    b.HasIndex("Proveedor");

                    b.HasIndex("Status");

                    b.ToTable("InventarioEntrada");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioSalidaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadProducto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cantidadProducto");

                    b.Property<int>("Producto")
                        .HasColumnType("int")
                        .HasColumnName("producto");

                    b.Property<int>("Razon")
                        .HasColumnType("int")
                        .HasColumnName("razon");

                    b.Property<int>("SalidaInventario")
                        .HasColumnType("int")
                        .HasColumnName("salidaInventario");

                    b.HasKey("Id");

                    b.HasIndex("Producto");

                    b.HasIndex("SalidaInventario");

                    b.ToTable("InventarioSalidaDetalle");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioSalidum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Caja")
                        .HasColumnType("int")
                        .HasColumnName("caja");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("empleado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Caja");

                    b.HasIndex("Status");

                    b.ToTable("InventarioSalida");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("InventarioStatus");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria")
                        .HasColumnType("int")
                        .HasColumnName("categoria");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codigoBarras");

                    b.Property<string>("DescripcionProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcionProducto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<bool>("RequiereInventario")
                        .HasColumnType("bit")
                        .HasColumnName("requiereInventario");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int")
                        .HasColumnName("unidadMedida");

                    b.HasKey("Id");

                    b.HasIndex("Categoria");

                    b.HasIndex("UnidadMedida");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalleDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("calleDireccion");

                    b.Property<string>("ColDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("colDireccion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("estado");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("municipio");

                    b.Property<string>("NumDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numDireccion");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pais");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RFC");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.TipoMonedum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("TipoMoneda");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.TipoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("TipoPago");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.UnidadMedidum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("UnidadMedida");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VContacto", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreTipoContacto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombreTipoContacto");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int")
                        .HasColumnName("proveedor");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("razonSocial");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono");

                    b.Property<int>("TipoContacto")
                        .HasColumnType("int")
                        .HasColumnName("tipoContacto");

                    b.ToView("vContacto");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VProductoInventario", b =>
                {
                    b.Property<int>("Caja")
                        .HasColumnType("int")
                        .HasColumnName("caja");

                    b.Property<int?>("CantidadStock")
                        .HasColumnType("int")
                        .HasColumnName("cantidadStock");

                    b.Property<int>("Categoria")
                        .HasColumnType("int")
                        .HasColumnName("categoria");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("codigoBarras");

                    b.Property<string>("DescripcionProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcionProducto");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombreCategoria");

                    b.Property<string>("NombreUnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombreUnidadMedida");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("money")
                        .HasColumnName("precioCompra");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("money")
                        .HasColumnName("precioVenta");

                    b.Property<int?>("PuntoReorden")
                        .HasColumnType("int")
                        .HasColumnName("puntoReorden");

                    b.Property<bool>("RequiereInventario")
                        .HasColumnType("bit")
                        .HasColumnName("requiereInventario");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int>("TipoMonedaCompra")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaCompra");

                    b.Property<int>("TipoMonedaVenta")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaVenta");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int")
                        .HasColumnName("unidadMedida");

                    b.ToView("vProductoInventario");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VentaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantProducto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cantProducto");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("money")
                        .HasColumnName("precioCompra");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("money")
                        .HasColumnName("precioVenta");

                    b.Property<int>("Producto")
                        .HasColumnType("int")
                        .HasColumnName("producto");

                    b.Property<int>("TipoMonedaCompra")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaCompra");

                    b.Property<int>("TipoMonedaVenta")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaVenta");

                    b.Property<int>("Venta")
                        .HasColumnType("int")
                        .HasColumnName("venta");

                    b.HasKey("Id");

                    b.HasIndex("Producto");

                    b.HasIndex("Venta");

                    b.ToTable("VentaDetalle");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VentaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("MontoPagado")
                        .HasColumnType("money")
                        .HasColumnName("montoPagado");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("money")
                        .HasColumnName("montoTotal");

                    b.Property<int>("TipoPago")
                        .HasColumnType("int")
                        .HasColumnName("tipoPago");

                    b.Property<int>("Venta")
                        .HasColumnType("int")
                        .HasColumnName("venta");

                    b.HasKey("Id");

                    b.HasIndex("TipoPago");

                    b.HasIndex("Venta");

                    b.ToTable("VentaPago");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VentaStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("VentaStatus");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Ventum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Caja")
                        .HasColumnType("int")
                        .HasColumnName("caja");

                    b.Property<int>("Cliente")
                        .HasColumnType("int")
                        .HasColumnName("cliente");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("empleado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreEmpleado");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Caja");

                    b.HasIndex("Cliente");

                    b.HasIndex("Status");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Vproducto", b =>
                {
                    b.Property<int>("Categoria")
                        .HasColumnType("int")
                        .HasColumnName("categoria");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codigoBarras");

                    b.Property<string>("DescripcionProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcionProducto");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombreCategoria");

                    b.Property<string>("NombreUnidadMedida")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombreUnidadMedida");

                    b.Property<bool>("RequiereInventario")
                        .HasColumnType("bit")
                        .HasColumnName("requiereInventario");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int")
                        .HasColumnName("unidadMedida");

                    b.ToView("VProducto");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VventaDetalleProducto", b =>
                {
                    b.Property<decimal>("CantProducto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cantProducto");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombreProducto");

                    b.Property<string>("NombreTipoMonedaCompra")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreTipoMonedaCompra");

                    b.Property<string>("NombreTipoMonedaVenta")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreTipoMonedaVenta");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("money")
                        .HasColumnName("precioCompra");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("money")
                        .HasColumnName("precioVenta");

                    b.Property<int>("Producto")
                        .HasColumnType("int")
                        .HasColumnName("producto");

                    b.Property<int>("TipoMonedaCompra")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaCompra");

                    b.Property<int>("TipoMonedaVenta")
                        .HasColumnType("int")
                        .HasColumnName("tipoMonedaVenta");

                    b.Property<int>("Venta")
                        .HasColumnType("int")
                        .HasColumnName("venta");

                    b.ToView("VVentaDetalleProducto");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Vventum", b =>
                {
                    b.Property<int>("Caja")
                        .HasColumnType("int")
                        .HasColumnName("caja");

                    b.Property<int>("Cliente")
                        .HasColumnType("int")
                        .HasColumnName("cliente");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("empleado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreEmpleado");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.ToView("VVenta");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Categorium", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Categorium", "PadreNavigation")
                        .WithMany("InversePadreNavigation")
                        .HasForeignKey("Padre")
                        .HasConstraintName("FK_Categoria_Categoria1");

                    b.Navigation("PadreNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Contacto", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Proveedor", "ProveedorNavigation")
                        .WithMany("Contactos")
                        .HasForeignKey("Proveedor")
                        .HasConstraintName("FK_Contacto_ContactoProveedor")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.ContactoTipo", "TipoContactoNavigation")
                        .WithMany("Contactos")
                        .HasForeignKey("TipoContacto")
                        .HasConstraintName("FK_Contacto_ContactoTipo")
                        .IsRequired();

                    b.Navigation("ProveedorNavigation");

                    b.Navigation("TipoContactoNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Inventario", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Caja", "CajaNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("Caja")
                        .HasConstraintName("FK_Inventario_Caja")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.Producto", "ProductoNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Inventario_Producto")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.TipoMonedum", "TipoMonedaCompraNavigation")
                        .WithMany("InventarioTipoMonedaCompraNavigations")
                        .HasForeignKey("TipoMonedaCompra")
                        .HasConstraintName("FK_Inventario_TipoMoneda")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.TipoMonedum", "TipoMonedaVentaNavigation")
                        .WithMany("InventarioTipoMonedaVentaNavigations")
                        .HasForeignKey("TipoMonedaVenta")
                        .HasConstraintName("FK_Inventario_TipoMoneda1")
                        .IsRequired();

                    b.Navigation("CajaNavigation");

                    b.Navigation("ProductoNavigation");

                    b.Navigation("TipoMonedaCompraNavigation");

                    b.Navigation("TipoMonedaVentaNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioEntradaDetalle", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.InventarioEntradum", "EntradaInventarioNavigation")
                        .WithMany("InventarioEntradaDetalles")
                        .HasForeignKey("EntradaInventario")
                        .HasConstraintName("FK_InventarioEntradaDetalle_InventarioEntrada")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.Producto", "ProductoNavigation")
                        .WithMany("InventarioEntradaDetalles")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_InventarioEntradaDetalle_Producto")
                        .IsRequired();

                    b.Navigation("EntradaInventarioNavigation");

                    b.Navigation("ProductoNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioEntradum", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Caja", "CajaNavigation")
                        .WithMany("InventarioEntrada")
                        .HasForeignKey("Caja")
                        .HasConstraintName("FK_InventarioEntrada_Caja")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.Proveedor", "ProveedorNavigation")
                        .WithMany("InventarioEntrada")
                        .HasForeignKey("Proveedor")
                        .HasConstraintName("FK_InventarioEntrada_ContactoProveedor")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.InventarioStatus", "StatusNavigation")
                        .WithMany("InventarioEntrada")
                        .HasForeignKey("Status")
                        .HasConstraintName("FK_InventarioEntrada_InventarioStatus")
                        .IsRequired();

                    b.Navigation("CajaNavigation");

                    b.Navigation("ProveedorNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioSalidaDetalle", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Producto", "ProductoNavigation")
                        .WithMany("InventarioSalidaDetalles")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_InventarioSalidaDetalle_Producto")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.InventarioSalidum", "SalidaInventarioNavigation")
                        .WithMany("InventarioSalidaDetalles")
                        .HasForeignKey("SalidaInventario")
                        .HasConstraintName("FK_InventarioSalidaDetalle_InventarioSalida")
                        .IsRequired();

                    b.Navigation("ProductoNavigation");

                    b.Navigation("SalidaInventarioNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioSalidum", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Caja", "CajaNavigation")
                        .WithMany("InventarioSalida")
                        .HasForeignKey("Caja")
                        .HasConstraintName("FK_InventarioSalida_Caja")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.InventarioStatus", "StatusNavigation")
                        .WithMany("InventarioSalida")
                        .HasForeignKey("Status")
                        .HasConstraintName("FK_InventarioSalida_InventarioStatus")
                        .IsRequired();

                    b.Navigation("CajaNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Producto", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Categorium", "CategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Categoria")
                        .HasConstraintName("FK_Producto_Categoria1")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.UnidadMedidum", "UnidadMedidaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("UnidadMedida")
                        .HasConstraintName("FK_Producto_UnidadMedida")
                        .IsRequired();

                    b.Navigation("CategoriaNavigation");

                    b.Navigation("UnidadMedidaNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VentaDetalle", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Producto", "ProductoNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_VentaDetalle_Producto1")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.Ventum", "VentaNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("Venta")
                        .HasConstraintName("FK_VentaDetalle_Venta")
                        .IsRequired();

                    b.Navigation("ProductoNavigation");

                    b.Navigation("VentaNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VentaPago", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.TipoPago", "TipoPagoNavigation")
                        .WithMany("VentaPagos")
                        .HasForeignKey("TipoPago")
                        .HasConstraintName("FK_VentaPago_TipoPago")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.Ventum", "VentaNavigation")
                        .WithMany("VentaPagos")
                        .HasForeignKey("Venta")
                        .HasConstraintName("FK_VentaPago_Venta")
                        .IsRequired();

                    b.Navigation("TipoPagoNavigation");

                    b.Navigation("VentaNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Ventum", b =>
                {
                    b.HasOne("JolumaPOS_v2.Shared.Models.Caja", "CajaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("Caja")
                        .HasConstraintName("FK_Venta_Caja")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.Cliente", "ClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("Cliente")
                        .HasConstraintName("FK_Venta_Cliente")
                        .IsRequired();

                    b.HasOne("JolumaPOS_v2.Shared.Models.VentaStatus", "StatusNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("Status")
                        .HasConstraintName("FK_Venta_VentaStatus")
                        .IsRequired();

                    b.Navigation("CajaNavigation");

                    b.Navigation("ClienteNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Caja", b =>
                {
                    b.Navigation("InventarioEntrada");

                    b.Navigation("Inventarios");

                    b.Navigation("InventarioSalida");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Categorium", b =>
                {
                    b.Navigation("InversePadreNavigation");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Cliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.ContactoTipo", b =>
                {
                    b.Navigation("Contactos");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioEntradum", b =>
                {
                    b.Navigation("InventarioEntradaDetalles");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioSalidum", b =>
                {
                    b.Navigation("InventarioSalidaDetalles");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.InventarioStatus", b =>
                {
                    b.Navigation("InventarioEntrada");

                    b.Navigation("InventarioSalida");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Producto", b =>
                {
                    b.Navigation("InventarioEntradaDetalles");

                    b.Navigation("Inventarios");

                    b.Navigation("InventarioSalidaDetalles");

                    b.Navigation("VentaDetalles");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Proveedor", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("InventarioEntrada");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.TipoMonedum", b =>
                {
                    b.Navigation("InventarioTipoMonedaCompraNavigations");

                    b.Navigation("InventarioTipoMonedaVentaNavigations");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.TipoPago", b =>
                {
                    b.Navigation("VentaPagos");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.UnidadMedidum", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.VentaStatus", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("JolumaPOS_v2.Shared.Models.Ventum", b =>
                {
                    b.Navigation("VentaDetalles");

                    b.Navigation("VentaPagos");
                });
#pragma warning restore 612, 618
        }
    }
}
